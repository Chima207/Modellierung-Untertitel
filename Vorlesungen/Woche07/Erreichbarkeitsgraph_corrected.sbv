0:00:00.000,0:00:09.480
In the previous video I had spoken towards
the end of the non-determinism with Petri nets.

0:00:09.480,0:00:17.040
Especially in the execution, i.e. that
there can be several activated transitions for

0:00:17.040,0:00:22.860
a marking, which can then
also lead to different subsequent markings.

0:00:22.860,0:00:28.170
And I had already mentioned that
this results in a graph which

0:00:28.170,0:00:31.860
ultimately corresponds to
a flat state diagram.

0:00:31.860,0:00:34.800
And that is the flat state
diagram of exactly this Petri net.

0:00:34.800,0:00:38.790
That is now defined
here on this slide.

0:00:38.790,0:00:43.050
I'll talk through that briefly and
then we'll see it on an example.

0:00:43.050,0:00:45.270
And it will
be practiced, of course.

0:00:45.270,0:00:48.600
So, given
a Petri net.

0:00:48.600,0:00:53.820
We know how this is mathematically given by
these five components: place set, transition set, pre-weight

0:00:53.820,0:00:58.500
functions, post-weight
functions, start marking.

0:00:58.500,0:01:03.120
And then we assign a flat
state diagram to this Petri net.

0:01:05.040,0:01:07.485
This always consists
of certain components

0:01:07.485,0:01:09.930
as defined mathematically earlier (where
we looked at graphs in general).

0:01:12.810,0:01:15.330
So there is
the node set.

0:01:15.330,0:01:18.060
This is often
called V for "vertices".

0:01:18.060,0:01:21.600
Or we can call it Z
for states, because of the state diagram.

0:01:21.600,0:01:27.000
And for that, we choose the
set of all markings reachable from m0.

0:01:27.000,0:01:31.590
Using exactly the reachability
notion that was defined here.

0:01:31.590,0:01:35.760
So any marking m that is
reachable in this way by a

0:01:35.760,0:01:43.320
finite sequence of transitions from m0
is packed into this set Z.

0:01:43.320,0:01:44.760

Reminder:

0:01:44.760,0:01:51.090
A Petri net
configuration, i.e. an assignment

0:01:51.090,0:01:56.670
of places of the Petri net with
tokens, corresponds to a state of the system.

0:01:56.670,0:02:02.250
Therefore it makes sense to choose exactly
that as the states in the state diagram.

0:02:02.250,0:02:03.990
Of course only
the reachable markings.

0:02:03.990,0:02:05.670
Not all
conceivable markings.

0:02:05.670,0:02:12.000
Because markings, which are not reachable
from the start marking, contribute nothing

0:02:12.630,0:02:15.360
to the understanding
of the Petri net.

0:02:15.360,0:02:17.790
They can never
be realized anyway.

0:02:17.790,0:02:22.140
Okay, then there is
the set of edge labels.

0:02:23.280,0:02:29.100
In a flat state diagram, after all,
we could label the edges between the nodes.

0:02:29.100,0:02:31.530
And for that here we
choose the set of transitions.

0:02:31.530,0:02:36.330
So on each edge between nodes
we will write a transition, namely

0:02:36.330,0:02:38.130
the transition that
led to this transition.

0:02:38.130,0:02:39.960
Which was activated
in the original marking

0:02:39.960,0:02:45.120
before the transition, and led
exactly to the subsequent state.

0:02:47.640,0:02:55.920
Then we get as edge set, or
transitions, exactly the triples consisting of marking,

0:02:57.840,0:03:03.030
transition, subsequent marking, for
which this relationship holds.

0:03:03.030,0:03:07.800
So we don't just
link any markings together.

0:03:07.800,0:03:13.710
But we have a transition from
m to m' with the label

0:03:13.710,0:03:23.280
t, so with label t at the
arrow, exactly when t is activated in

0:03:23.280,0:03:28.020
marking m, and after firing
exactly the marking m' arises.

0:03:29.970,0:03:33.960
Thus we have all
nodes, all edges, their labels.

0:03:33.960,0:03:37.140
As a rule, in a flat
state diagram, we still draw out a

0:03:37.140,0:03:40.830
special state, namely
the start state.

0:03:40.830,0:03:43.470
And here, logically, this
is the initial marking.

0:03:43.470,0:03:46.350
This is one of
these reachable markings, because

0:03:46.350,0:03:49.770
it is reachable after
the empty transition sequence.

0:03:49.770,0:03:55.200
So it fits, is an
element of the relevant state set.

0:03:55.200,0:04:03.600
Okay, so that's our flat state
diagram for our given Petri net.

0:04:03.600,0:04:06.360
And this is also
called the reachability graph.

0:04:06.360,0:04:10.410
It's a graph that represents
all the reachable markings, and

0:04:10.410,0:04:16.260
of course makes it clear
via the labels/labels of the

0:04:16.260,0:04:18.870
edges how a particular
marking can be reached.

0:04:18.870,0:04:22.900
So in the end the firing
sequence can be traced in the graph.

0:04:22.900,0:04:27.010
This can become
an infinite graph.

0:04:27.730,0:04:28.600
The Petri net
is always finite.

0:04:28.600,0:04:30.760
The set S was finite,
the set T was finite, but

0:04:30.760,0:04:34.625
the reachability graph could
well be an infinite graph.

0:04:34.625,0:04:38.770
While every firing sequence is finite, there
may be an infinite number of them.

0:04:38.770,0:04:41.740
We're not going to consider
that here at the moment.

0:04:41.740,0:04:48.220
So here at the moment we will only
see an example of a finite reachability graph.

0:04:48.220,0:04:53.890
But we'll also come back to
at least one example of infinity later.

0:04:53.890,0:04:58.810
There the definition is unchanged, the
development is in principle also the

0:04:58.810,0:05:03.040
same, only of course you can't
paint an infinite graph on a slide

0:05:03.040,0:05:07.750
in finite time, as I'm about to
do now here for the example in sequence.

0:05:12.190,0:05:16.300
And that is, let's look at
exactly the reachability graph for this

0:05:16.300,0:05:18.820
Petri net, which we've
now seen several times.

0:05:18.820,0:05:23.200
That was our example Petri net
on the slides for the connection

0:05:23.200,0:05:25.180
between graphical
and mathematical representation.

0:05:25.180,0:05:31.720
And it was also the example that
I had used in an earlier video this

0:05:31.720,0:05:38.230
week for illustrating the mathematical
formulation of firing and reachability.

0:05:39.160,0:05:42.820
It helps, of course, to have
already done that for this example.

0:05:42.820,0:05:45.070
Because then we
already know part of

0:05:45.070,0:05:47.980
the reachability
graph directly now.

0:05:53.140,0:05:55.720
So, what will this
graph look like for this?

0:05:55.720,0:05:56.860
It will be
on the next slide.

0:05:56.860,0:05:59.500
But I would like to
talk through the first few states,

0:05:59.500,0:06:03.100
so to speak, and then
just leave the graph to you.

0:06:03.100,0:06:07.660
So that you can look for or check
the rest of the transitions in there yourself.

0:06:07.660,0:06:13.210
So, by definition, this is a
graph that contains all all reachable

0:06:13.210,0:06:16.720
markings, especially, of course,
at least the initial marking.

0:06:16.720,0:06:19.540
And in fact, when we
set up such a reachability graph,

0:06:19.540,0:06:21.190
we start with the
initial marking, of course.

0:06:21.190,0:06:22.630
Because we already
know that it

0:06:22.630,0:06:24.700
has to be
present in the graph.

0:06:24.700,0:06:26.590
So, what is
the start marking here?

0:06:27.310,0:06:29.590
Of course, we first have to agree on
how we want to write down the markings.

0:06:30.610,0:06:31.300
I had
once said:

0:06:31.300,0:06:33.970
We like to use
tuples, in this case triples.

0:06:33.970,0:06:38.770
For this we have to decide in
which order we want to use the places.

0:06:38.770,0:06:42.100
And if they are
called s1, s2, s3,

0:06:42.100,0:06:45.100
it is obvious to write
them down in this order.

0:06:45.100,0:06:48.520
So, the start marking as
a triple would be (1,2,0),

0:06:48.520,0:06:53.740
because these are the tokens on
the three places in the start state.

0:06:53.740,0:06:59.050
So that would explain this
part from this solution here.

0:06:59.050,0:07:03.700
You take (1,2,0) as the
first marking and also draw it

0:07:03.700,0:07:07.360
out by this input
arrow as the start marking.

0:07:09.100,0:07:14.470
And then you have to
find more nodes, all reachable markings.

0:07:14.470,0:07:15.430
That means, you have
to ask now, starting

0:07:15.430,0:07:18.130
from this start marking, which
is already in the graph:

0:07:18.130,0:07:20.470
What are
the reachable markings?

0:07:20.470,0:07:24.550
And for this one must
look, which of the given transitions,

0:07:24.550,0:07:32.290
which exist in the Petri net, are
then fireable in the marking just present?

0:07:32.290,0:07:33.220
At the beginning, this
is the start marking.

0:07:33.220,0:07:35.980
That is, we
simply have to consider:

0:07:35.980,0:07:37.930
What is fireable
in this situation?

0:07:37.930,0:07:40.000
And in fact,
only t1 is fireable.

0:07:40.000,0:07:41.620
And we already know
what comes out of that.

0:07:41.620,0:07:43.120
For one thing,
we can check it.

0:07:43.120,0:07:45.520
Then there would be
two tokens down here afterwards.

0:07:45.520,0:07:49.330
So (0,1,2) would be the
next marking, after firing t1.

0:07:49.330,0:07:52.450
But we already know that,
because we have recalculated it here.

0:07:52.450,0:07:53.470
That was
exactly the point:

0:07:53.470,0:07:59.980
From the start marking (1,2,0) we can
get this next marking by firing with t1.

0:07:59.980,0:08:03.790
So it is reachable, and therefore it
has to appear in the reachability graph.

0:08:03.790,0:08:10.690
And this would be exactly
the extension to this part.

0:08:10.690,0:08:13.480
So we would build up
the graph piece by piece now.

0:08:13.480,0:08:15.400
We started with
(1,2,0) and we know:

0:08:15.400,0:08:17.620
After firing t1 we
end up at (0,1,2).

0:08:17.620,0:08:19.870
There would be no
further arrows for the time

0:08:19.870,0:08:25.330
being, because no other transitions
are activated in the start marking.

0:08:25.330,0:08:27.550
Then we
would look next:

0:08:27.550,0:08:29.380
Well, if there are
no more transitions from

0:08:29.380,0:08:31.120
it, what about
this new marking (0,1,2)?

0:08:31.120,0:08:33.460
Are there any
transitions from it?

0:08:33.460,0:08:37.870
For this we would have to
think of this token here set differently.

0:08:37.870,0:08:39.130
Now it is no
longer about the start marking,

0:08:39.130,0:08:40.870
but about the
current marking (0,1,2).

0:08:40.870,0:08:43.900
So, if nothing lies here, one
token lies here, and here two,

0:08:45.790,0:08:48.730
which transition would
be fireable then?

0:08:48.730,0:08:51.280
The t1 would not be fireable,
because of the imaginary zero here.

0:08:52.300,0:08:58.150
But t2 and t3 would both be
fireable, because they depend only on tokens in

0:08:58.150,0:08:59.500
s3, where now
two would lie.

0:08:59.500,0:09:02.830
So we would know, next
t2 and t3 would be fireable.

0:09:02.830,0:09:06.190
And of course, we
also saw exactly that earlier.

0:09:07.210,0:09:11.020
Namely, in this example we had also
considered exactly from the marking m1, which is

0:09:11.020,0:09:16.780
present after firing t1, and finally
calculated that t2 and t3 are fireable,

0:09:16.780,0:09:22.450
and that thereby the two
markings (1,1,1) and (0,2,1) arise.

0:09:22.450,0:09:29.200
We can now plot this
on our graph in progress.

0:09:29.200,0:09:33.040
So we would extend the
piece we already had now.

0:09:33.040,0:09:37.420
On the one hand by
(with transition t2) the node (1,1,1),

0:09:38.920,0:09:46.060
and on the other hand by
(per transition t3) the succession marking (0,2,1).

0:09:46.060,0:09:53.770
So then we would have developed
this part of the graph, so to

0:09:53.770,0:09:56.980
speak, still without the arrows
going in the opposite direction.

0:09:56.980,0:10:02.110
So these four states
and the input token

0:10:02.110,0:10:04.390
arrow, plus these
three arrows here.

0:10:04.390,0:10:10.600
Then we would also know that we're not
going to have any more transitions from this node.

0:10:10.600,0:10:14.650
Because t2 and t3 are
activated and that's just about it.

0:10:14.650,0:10:19.060
So next we would look at
the two new states and think

0:10:19.060,0:10:21.100
about what is
fireable from these.

0:10:21.100,0:10:24.700
But I don't have that
now already on existing slides.

0:10:24.700,0:10:27.520
So I didn't have any
more things calculated through here.

0:10:27.520,0:10:31.000
But of course you can do
the same considerations for the new markings.

0:10:31.000,0:10:39.940
Or take the Petri
net, think away these markings,

0:10:39.940,0:10:44.170
instead for example consider the situation, where
on each place exactly one token lies.

0:10:44.170,0:10:46.990
In order to consider how
it could go on from here.

0:10:47.740,0:10:51.940
So, what would happen if there were
exactly one token here, here and here?

0:10:51.940,0:10:54.250
Which transitions would
be activated then?

0:10:54.250,0:10:54.610
All
of them!

0:10:54.610,0:10:56.980
Transition t1 because
of these two inputs.

0:10:56.980,0:10:59.140
Transition t2 because
of this input.

0:10:59.140,0:11:01.000
Transition t3 because
of this input.

0:11:01.000,0:11:05.200
So because of the presence of
a token on each relevant input.

0:11:05.200,0:11:09.700
That means, from the marking
(1,1,1) all three transitions are fireable.

0:11:10.750,0:11:16.960
This would lead to the fact that we
must actually have three outgoing arrows from (1,1,1).

0:11:16.960,0:11:20.260
And if we then calculate in
each case what comes out as a

0:11:20.260,0:11:24.670
subsequent marking, we find out, for example, that
if we execute t1, we come to (0,0,3).

0:11:24.670,0:11:26.080
So this
state is added.

0:11:26.080,0:11:28.360
But we
also notice:

0:11:28.360,0:11:31.120
If we fire
t3 from (1,1,1), then

0:11:31.120,0:11:35.230
we would come to the
marking (1,2 0), which already exists.

0:11:35.230,0:11:42.160
Of course, we then do not
make a new node here with (1,2,0).

0:11:42.160,0:11:43.420
After all, we
have a graph.

0:11:43.420,0:11:50.080
That is, we simply have a
back arrow labeled t3 in that case.

0:11:50.080,0:11:53.410
And it turns out that we
can still get here with t2.

0:11:53.410,0:11:57.550
Okay, and so we extend
the graph piece by piece.

0:11:57.550,0:12:01.630
For each new
state we always

0:12:01.630,0:12:06.160
check which further transitions
are fireable from there.

0:12:06.160,0:12:08.410
If this leads to
new nodes, we add them.

0:12:08.410,0:12:10.480
And for those we
have to check again,

0:12:10.480,0:12:13.780
which further transitions are
possible starting from there.

0:12:13.780,0:12:18.730
If, on the other hand, we have
a backward arrow (like the one from

0:12:18.730,0:12:23.080
here to here), we don't have to look
again to see what is possible from this marking.

0:12:23.080,0:12:25.690
We already have this, so
all transitions starting from here

0:12:25.690,0:12:26.950
we have
already looked at.

0:12:26.950,0:12:28.210
For example, that
was just t1.

0:12:28.210,0:12:32.230
That doesn't change when we have
the connection between these two nodes.

0:12:32.230,0:12:35.170
Yeah, so it doesn't change
what would be possible from here.

0:12:35.170,0:12:40.880
And then we keep doing that until
at some point no new states are added.

0:12:40.880,0:12:42.710
This case does not
necessarily have to occur.

0:12:42.710,0:12:48.020
It can just be, if the reachability graph
is infinite, that this goes on and on.

0:12:48.020,0:12:49.310
That we always
find new states.

0:12:49.310,0:12:53.810
But for this concrete
Petri net with the

0:12:53.810,0:12:59.750
connections given here and
this starting marking it

0:12:59.750,0:13:05.780
results that after finitely many
steps no more markings are added.

0:13:05.780,0:13:10.070
And new transitions cannot be added either,
if we have considered all of them.

0:13:10.070,0:13:12.860
That is, then that
would be the result graph.

0:13:12.860,0:13:27.200
So that's then the reachability graph
for the Petri net given here.

0:13:27.200,0:13:29.510
And this is useful, because
it describes the overall behavior

0:13:29.510,0:13:33.110
of the Petri
net in this form.

0:13:33.110,0:13:36.470
This is perhaps not as informative,
from a modeling point of view,

0:13:36.470,0:13:41.930
as this representation here, where we look at
the transitions, so to speak, what they depend on.

0:13:41.930,0:13:45.740
That can be read
out here at most indirectly.

0:13:45.740,0:13:48.140
You would have to
look at all t1

0:13:48.140,0:13:51.230
arrows to find out under
which conditions t1 is fireable.

0:13:51.230,0:13:56.990
But properties of the Petri net
can be examined at this representation.

0:13:56.990,0:14:00.530
In the first lecture on Petri
nets we had asked such questions:

0:14:00.530,0:14:04.460
How can the system
reach a dead end?

0:14:04.460,0:14:12.080
And this can't be seen here directly,
whether after some circuits it can happen

0:14:12.080,0:14:14.000
that no further
transitions are possible.

0:14:14.000,0:14:17.870
However, in this accessibility
graph it is factually obvious.

0:14:17.870,0:14:21.140
We just have to
see if there is a

0:14:21.140,0:14:23.960
node from which there are
no outgoing arrows, like this one.

0:14:23.960,0:14:24.920
And then
we know:

0:14:24.920,0:14:27.470
Yes, indeed, this Petri net
can reach a dead end.

0:14:27.470,0:14:30.050
The system described by this
can develop in such a

0:14:30.050,0:14:32.630
way that at some point
no further transitions are possible.

0:14:32.630,0:14:36.620
For example, after t1, t3,
t3 we come to a situation

0:14:36.620,0:14:38.930
where no further
steps are possible.

0:14:38.930,0:14:44.240
So then we can study properties of
the Petri net on this reachability graph.

0:14:44.240,0:14:45.410
This is true
for dead ends.

0:14:45.410,0:14:50.440
This is true
for certain liveness questions.

0:14:50.440,0:14:52.040
The question about dead ends
is ultimately also the question:

0:14:52.040,0:14:53.270
Can the system
always live on?

0:14:53.270,0:14:54.290
So we could
investigate, for example:

0:14:54.290,0:14:55.670
Are there
infinite processes here?

0:14:56.450,0:15:00.794
So is it possible for the
system to go on and on?

0:15:00.794,0:15:00.797

Yes.

0:15:00.797,0:15:04.640
It can reach an impasse, but if
it behaves favorably, if one makes sensible

0:15:04.640,0:15:10.880
choices, so to speak, as an
external agent (the Petri net itself

0:15:10.880,0:15:14.150
does not specify any
sequence or deterministic choice of

0:15:14.150,0:15:19.130
transitions), there are sequences of
this Petri net that are infinite.

0:15:19.130,0:15:24.290
If one avoids the dead
ends, the system can live infinitely.

0:15:24.290,0:15:33.360
And also questions about concurrencies, for example, can
be considered later on the basis of this structure.

0:15:33.360,0:15:36.960
Up to now, we
had only considered this informally.

0:15:36.960,0:15:38.940
Or questions
about capacities.

0:15:38.940,0:15:39.720
One of
the questions was:

0:15:39.720,0:15:42.390
Are there any
resource upper limits?

0:15:42.390,0:15:46.260
That, for example, if you
consider the tokens as resources,

0:15:46.260,0:15:48.900
there are
capacity restrictions.

0:15:48.900,0:15:49.980
And that is indeed
what we see here.

0:15:50.760,0:15:53.100
So here we could not
have said immediately whether the

0:15:54.570,0:15:58.200
total number of tokens in
the system is somehow limited.

0:15:58.200,0:16:00.900
You would have had to think about
what the transitions do to the total

0:16:00.900,0:16:04.260
number of tokens or to the
number of tokens on individual positions.

0:16:04.260,0:16:06.780
On the other hand, if we have this
graph, we can look at it and say:

0:16:06.780,0:16:09.750
There is never a
number greater than three.

0:16:09.750,0:16:13.050
That is, we know that
actually in each run of this

0:16:13.050,0:16:16.500
Petri net there are never more
than three tokens on any one place.

0:16:16.500,0:16:21.540
We can look at the graph and see that
when we've built it completely and, of course, correctly.

0:16:21.540,0:16:26.340
Okay, and this kind
of use of reachability graphs

0:16:26.340,0:16:30.390
will be our topic in
the next lecture, not today.

0:16:30.390,0:16:34.470
That will be the topic
of the next video or videos.
