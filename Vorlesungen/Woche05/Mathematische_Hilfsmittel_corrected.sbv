0:00:00.000,0:00:08.400
Before we move away from
static modeling with UML next week

0:00:08.400,0:00:14.460
and move into Petri nets
and thus dynamic modeling, I would

0:00:14.460,0:00:23.370
like to first introduce,
or I hope repeat for

0:00:23.370,0:00:25.020
most of you, some
mathematical tools/terms in this video.

0:00:25.020,0:00:27.960
So that would
be simple set theory

0:00:27.960,0:00:30.120
terms, specifically sets,
functions, and graphs.

0:00:30.120,0:00:35.550
Hopefully this will really just be
a review for many of you, in

0:00:35.550,0:00:43.350
particular the Komedia students
will recognize the slides

0:00:43.350,0:00:46.800
as they are quite similar to
my Mathematical Structures lecture after all.

0:00:47.370,0:00:49.470
I think also
for the computer science

0:00:49.470,0:00:55.860
students some of the slides will
be quite similar to the logic lecture.

0:00:55.860,0:00:58.650
And also for
the ISE students

0:00:58.650,0:01:02.040
these terms should be known,
for example from Discrete Mathematics.

0:01:02.040,0:01:07.500
Nevertheless, I repeat, simply so that
you also see the notation exactly

0:01:07.500,0:01:09.660
as I will have
it in the further slides.

0:01:09.660,0:01:14.340
Of course, if you find
that you already know all

0:01:14.340,0:01:18.090
of this, you
may skip this video.

0:01:23.270,0:01:25.895
We're going to
be dealing with sets.

0:01:25.895,0:01:29.450
So sets will occur in
the formalization of Petri nets.

0:01:29.450,0:01:34.940
And sets you know at least
from school as simply such collections of

0:01:34.940,0:01:37.100
elements, written
with braces.

0:01:37.100,0:01:40.910
If the sets can
be enumerated, piece by

0:01:40.910,0:01:43.520
piece, then it is
written down with commas.

0:01:43.520,0:01:46.190
And maybe dot, dot, dot,
if it's an infinite set

0:01:46.190,0:01:49.460
that can be continued
in a natural way.

0:01:49.460,0:01:52.790
Of course, there are also quantities that
cannot be written down in this way.

0:01:52.790,0:01:57.590
For example, you can't write down
the real numbers in exactly this way.

0:01:57.590,0:02:03.530
What one also likes to
do is to indicate sets by

0:02:03.530,0:02:05.510
describing their properties,
so to speak.

0:02:05.510,0:02:07.670
So, for example, the
set of all natural numbers

0:02:07.670,0:02:13.280
that are even, one likes to
write in this so-called comprehension notation.

0:02:13.280,0:02:15.410
So the set of
all n, "so that".

0:02:15.410,0:02:17.630
Then in this case
there is a condition.

0:02:17.630,0:02:21.860
Let the n come from
the natural numbers and be even.

0:02:21.860,0:02:26.270
With N written in
this way, we denote

0:02:26.270,0:02:29.900
the set of natural numbers
which also contains the zero.

0:02:29.900,0:02:37.190
In our specification of the vector operations,
or even before the vector operations in

0:02:37.190,0:02:40.700
the arithmetic operations, I had also
used this as a set briefly.

0:02:43.430,0:02:50.200
That would be again the representation for
some general property that depends on an x.

0:02:50.200,0:02:55.060
And if there is a basic set,
as it was the case here above, one

0:02:55.060,0:02:59.410
writes it gladly also in such a way
that one says already before the vertical line,

0:02:59.410,0:03:04.300
from which basic set the elements come,
which come into question for the set.

0:03:04.300,0:03:06.310
And then there
is another property.

0:03:06.310,0:03:09.760
That was "being even" above,
that can be any property.

0:03:09.760,0:03:11.110
With it
one means:

0:03:11.110,0:03:15.970
All elements from X, which
additionally satisfy the property E(x),

0:03:15.970,0:03:18.280
shall be gathered
in the set M.

0:03:18.280,0:03:21.790
This simply as possibilities
to write down sets.

0:03:21.790,0:03:36.580
Important for consideration of sets is,
that sets are unordered, and also

0:03:36.580,0:03:43.780
the number of elements, thus the
occurrence of an element, cannot be multiple.

0:03:43.780,0:03:46.450
First of all, sets are disordered,
so whether I write down \{1,2,3\}

0:03:46.450,0:03:50.680
or \{1,3,2\} or any other
permutation of the numbers 1,2,3.

0:03:50.680,0:03:52.000
It is always
the same set.

0:03:53.620,0:03:58.150
Secondly, elements do not
appear more than once.

0:03:58.150,0:04:00.610
Or, if you would write them
down several times, it makes no difference.

0:04:01.150,0:04:04.390
The set \{1,2,3,4,4\} is
still just the set \{1,2,3,4\},

0:04:05.350,0:04:07.660
because it only matters if
an element is in the set:

0:04:07.660,0:04:08.170
Yes
or No?

0:04:08.170,0:04:09.910
And not somehow
how many times.

0:04:09.910,0:04:13.300
That means, these
sets are equal,

0:04:13.300,0:04:16.510
but of course different from \{1,2,3\}
and also from the set \{1,2,3,4,5\}.

0:04:19.780,0:04:24.490
Because there is actually one element too
much or too little in each case.

0:04:24.490,0:04:30.100
While this "double occurrence" of 4 is
just no indication for somehow "too much".

0:04:30.100,0:04:31.810
The 4 is
in the set.

0:04:35.950,0:04:40.960
So this distinguishes sets
from simply lists of elements.

0:04:43.600,0:04:45.400
Then there are
some notations and operations.

0:04:45.400,0:04:47.500
On the
one hand relations.

0:04:47.500,0:04:48.880
On the one
hand being contained.

0:04:48.880,0:04:53.770
So an element a is in
the set, if it occurs in it.

0:04:53.770,0:04:57.790
And this element sign
is the abbreviation for it.

0:04:57.790,0:05:05.950
Then we need sometimes for counting
the number of elements in a set.

0:05:05.950,0:05:08.830
Of course, this is only
possible if the set is finite.

0:05:08.830,0:05:11.800
Generally, sets can be
infinite, like the natural numbers.

0:05:11.800,0:05:14.860
But if this
is a finite set,

0:05:14.860,0:05:20.260
we use this notation here
to denote that finite number.

0:05:20.260,0:05:26.500
Then there is the notion of
subset and a corresponding symbol for it.

0:05:27.490,0:05:30.430
That is, A is
a subset of B.

0:05:30.430,0:05:34.720
Then every element from A
must also be contained in B.

0:05:34.720,0:05:37.960
This need not be true vice versa,
then the sets would even be equal.

0:05:37.960,0:05:41.560
But at least every element from
A must also be present in B.

0:05:41.560,0:05:48.400
So for example the even integer numbers
are a subset of all integer numbers.

0:05:48.400,0:05:52.030
That is, it works
for infinite sets too.

0:05:52.030,0:05:54.730
And it's not the same as
saying that the subset relation says

0:05:54.730,0:05:58.090
the sets are smaller in
the sense of "contain fewer elements".

0:05:58.090,0:06:03.670
It's really a matter of whether all the elements in A
are also in B, no matter how many there may be.

0:06:03.670,0:06:08.650
Then there is
this particular set.

0:06:08.650,0:06:11.080
It would have the
number of elements zero.

0:06:11.080,0:06:13.750
That's why you like to write
it with some kind of zero,

0:06:14.530,0:06:17.260
but as a set
zero with this crossbar.

0:06:17.260,0:06:20.530
Or just the curly
braces without anything in between.

0:06:20.530,0:06:23.410
So this is the
set that contains no elements.

0:06:23.410,0:06:27.580
It is automatically a subset, even
a real subset, of any other set.

0:06:27.580,0:06:32.590
Real subset in the sense that it is
not equal to any non-empty set, of course.

0:06:32.590,0:06:40.970
Then there are operations
which link several sets.

0:06:40.970,0:06:46.985
On the one hand there is
the set union, written with this symbol.

0:06:46.985,0:06:50.600
We will see the reverse symbol
for the average in a moment.

0:06:50.600,0:06:54.530
The union is
about throwing quantities together.

0:06:54.530,0:06:59.810
So the result set here is the set of all elements that occur
in A or in B. The result set cannot be smaller than this symbol.

0:07:01.880,0:07:07.400
The result set cannot be smaller
than either of the original sets.

0:07:07.400,0:07:17.930
And of course both A and B are
subsets of the union of A and B.

0:07:17.930,0:07:26.540
Then there is, so to speak, dual
to it, with the reverse symbol, the intersection.

0:07:26.540,0:07:31.580
That would be the set of all
elements that occur in A and in B.

0:07:31.580,0:07:36.290
So only the "or" in this
conditional has been replaced by "and".

0:07:36.290,0:07:37.730
But this makes
a big difference.

0:07:37.730,0:07:44.480
In particular, the average usually makes
sets smaller, at least not larger.

0:07:44.480,0:07:50.870
So the average of A and B is
in any case subset of both A and B.

0:07:50.870,0:07:52.610
While here the
reverse was true:

0:07:52.610,0:07:55.730
A and B are
each subset of the union.

0:07:58.940,0:08:04.700
These are operations on sets in such
a way that the kind of elements

0:08:04.700,0:08:12.590
that are in the result set would be
elements from the original sets A and/or B.

0:08:12.590,0:08:15.650
Then there is
another operation, the

0:08:15.650,0:08:18.590
so-called cross product
or "Cartesian product".

0:08:18.590,0:08:20.990
There the structure
of the elements changes.

0:08:20.990,0:08:25.025
So in the result set are other
kinds of elements than in the original set.

0:08:25.025,0:08:30.341
Namely not simply the elements from A
and/or from B, but pairs of them.

0:08:30.341,0:08:36.140
So we have given two sets A and
B, and we get the set of all pairs.

0:08:36.140,0:08:42.050
And ordered pairs in such a way,
that the first element, the left element

0:08:42.050,0:08:47.090
of the pair, always comes from the set A,
and the right element always comes from the set B.

0:08:47.090,0:08:50.320
Of course, the sets may
also be equal by chance.

0:08:50.320,0:08:53.770
But in the general case, these
are simply two sets A and B,

0:08:53.770,0:08:58.990
and the first element of the result pairs
always comes from A, the second from B.

0:09:07.330,0:09:10.270
For example, for a two-element
set and a three-element set,

0:09:10.270,0:09:15.640
the Cartesian product here
would be as follows:

0:09:15.640,0:09:17.110
That has
six elements.

0:09:18.190,0:09:23.650
It results exactly the number of elements of
a cross product with finite sets A and B

0:09:23.650,0:09:29.140
as the product of the numbers of
the elements of these two single sets.

0:09:29.140,0:09:32.680
Because we can pair every element from
this set with every element from that one.

0:09:32.680,0:09:37.540
There are exactly these
six pairs in the case.

0:09:37.540,0:09:41.770
Of course, the order in which we
write down the elements here doesn't matter.

0:09:41.770,0:09:44.890
So it is only about the fact that
these six pairs have to occur in the

0:09:44.890,0:09:47.590
result set, not in which
order we wrote them down here.

0:09:47.590,0:09:53.230
A special case would be the
Cartesian product with the empty set.

0:09:53.230,0:09:54.550
There always the
empty set comes out.

0:09:54.550,0:09:58.840
For example, no matter how large the
first set is, we cannot form pairs if

0:09:58.840,0:10:02.290
the second element, the
second component of the

0:10:02.290,0:10:05.830
pair, is to come from this
empty set (in which there is nothing).

0:10:05.830,0:10:13.320
This is what
I had just said:

0:10:13.320,0:10:18.120
For finite sets, the number of elements of
the cross product is equal to the number

0:10:18.120,0:10:20.940
product of the numbers
of the individual elements.

0:10:20.940,0:10:28.050
And you can also
think about certain relations

0:10:28.890,0:10:30.750
between the relations
we have seen.

0:10:30.750,0:10:37.740
For example, in the case of subset relation and the cross product, if
A is a subset of B, then the same kind of relation holds

0:10:37.740,0:10:43.680
even after cross producting with some set C. And it
doesn't matter if I have the set C or not.

0:10:43.680,0:10:49.740
And it doesn't matter whether I multiply the set C by it from the right
when I do the cross product, or whether I multiply it by it from the left.

0:10:54.660,0:10:57.600
These are simply compatibility properties of the
cross product, in that case with the subset

0:10:57.600,0:10:58.590

relation.

0:10:58.590,0:11:03.990
The important thing is that
the reverse is not true.

0:11:03.990,0:11:07.260
Just because this
subset relation holds

0:11:07.260,0:11:13.890
doesn't necessarily make this subset relation hold,
especially if C is the empty set.

0:11:18.210,0:11:20.910
That would be
to form pairs.

0:11:20.910,0:11:25.470
And just as you can form pairs
and form a cross product between two sets,

0:11:25.470,0:11:28.380
you can extend that
for more than two sets.

0:11:28.380,0:11:31.290
Then you get
triples, quadruples, quintuples, etc.

0:11:31.290,0:11:34.140
So we'll have
tuples at times in

0:11:34.140,0:11:38.070
the formalization that contain
more than two components.

0:11:38.070,0:11:40.830
And then the notation
is just quite analogous.

0:11:40.830,0:11:45.210
Then we write more than
two elements in such round brackets,

0:11:45.210,0:11:47.820
separated with
commas, the components.

0:11:47.820,0:11:54.420
From n components we form
n-tuples and for n = 3,

0:11:55.170,0:11:58.050
n = 4, n = 5
there are still special notations for them.

0:11:58.050,0:12:03.180
Of course, tuples are
not the same as sets.

0:12:03.180,0:12:04.050
So
really important:

0:12:04.050,0:12:06.390
Take round brackets here
and not curly brackets,

0:12:06.390,0:12:11.970
because the components here
are relevant in their order.

0:12:11.970,0:12:16.800
So while the set \{1,2,3\} written
down and the set \{1,3,2\} written

0:12:16.800,0:12:19.680
down, each written in
curly brackets, were the same

0:12:19.680,0:12:23.790
thing (this showed up a few
slides ago), it's just different for triples.

0:12:23.790,0:12:27.240
So the triple (1,2,3) is
really different from the triple (1,3,2),

0:12:27.240,0:12:30.030
although the
same elements appear.

0:12:30.030,0:12:32.610
But they appear
in a different order.

0:12:32.610,0:12:37.500
So as elements of this
triple cross product (cross product

0:12:37.500,0:12:42.720
between three sets) these are different
values, and this is very important here.

0:12:49.990,0:12:54.430
It is also true that an element
can appear several times in the tuple.

0:12:54.430,0:12:57.730
This is also different
from the situation with sets.

0:12:57.730,0:13:01.210
It's not that it doesn't matter
that the 4 is here twice.

0:13:01.210,0:13:03.010
These are really
different tuples, especially since

0:13:03.010,0:13:08.530
the one on the left is a quadruple
and the one on the right is a quintuple.

0:13:08.530,0:13:10.000
But also
independent of that.

0:13:10.840,0:13:13.030
If we were to write
4 and 4 here, for example,

0:13:13.660,0:13:18.520
that would also be significant,
that the 4 occurs twice.

0:13:18.520,0:13:19.600
Different
from sets.

0:13:24.850,0:13:28.510
Then there's another
construction on sets that

0:13:28.510,0:13:30.850
we'll need, called
the power set.

0:13:30.850,0:13:37.330
This starts from a single set, that is, not
two sets A and B, but a single set M.

0:13:37.330,0:13:39.340
And the power set
is the set A.

0:13:39.340,0:13:44.380
And the power set is the
set that contains all subsets of M.

0:13:44.380,0:13:48.310
This is written
with this calligraphic P.

0:13:48.310,0:13:53.950
So the power set of M
is a set consisting of sets,

0:13:53.950,0:13:59.380
and each contained set is
a subset from the original M.

0:13:59.380,0:14:05.830
It is called a power set
because the number of elements increases exponentially.

0:14:05.830,0:14:13.660
So approximately the power set of
the set \{1,2,3\} is this eight-element set.

0:14:13.660,0:14:16.990
The set that consists of eight
elements, each of which is a set.

0:14:16.990,0:14:21.220
That is exactly all subsets
that exist of \{1,2,3\}, including the

0:14:21.220,0:14:25.570
empty subset and the entire
set as a subset of itself.

0:14:28.550,0:14:32.780
Then we can play games and consider
what this means for the empty set.

0:14:32.780,0:14:37.430
Then we find that the power set of
the empty set is just not the empty

0:14:37.430,0:14:40.190
set, but a one-element set
containing exactly the empty set.

0:14:40.190,0:14:44.510
This will rather not fall on
our feet here in the lecture,

0:14:44.510,0:14:47.090
because we will not
necessarily start from empty sets.

0:14:47.090,0:14:51.770
But it is important for
understanding ultimately also this power set

0:14:51.770,0:14:56.501
notion that it makes a difference whether I have the
empty set or the power set of the empty set.

0:14:56.501,0:15:02.150
You can iterate that, and then
more such exotic sets come out.

0:15:02.150,0:15:03.830
But they're
not absurd.

0:15:03.830,0:15:07.880
They simply follow from the
definition of the power set notion.

0:15:07.880,0:15:16.310
For finite sets, which is what they are
now in all three cases, this relation holds:

0:15:16.310,0:15:22.190
The number of elements of the power set is 2 to
the power of the number of elements of the basic set.

0:15:22.940,0:15:28.070
This is where the name power set comes
from, because this is a power of two.

0:15:28.070,0:15:35.030
And from this you can
see that if you form

0:15:35.030,0:15:38.420
power sets, for example in modeling
to capture states of a system,

0:15:38.420,0:15:42.950
there are then just
very quickly very many states.

0:15:42.950,0:15:48.860
That is one thing that one
would like to avoid, in modeling ultimately.

0:15:48.860,0:16:00.680
To repeat this notation, or just
to see it in action in

0:16:00.680,0:16:04.490
an example, let's take a look at
what such a state modeling might look like.

0:16:04.490,0:16:08.780
This is not yet an example of what I
would actually like to model dynamically directly as well.

0:16:08.780,0:16:12.500
For now, I just want
to use the terms we've seen

0:16:12.500,0:16:16.190
to describe the state
space of a possible system.

0:16:16.190,0:16:20.030
So let's say we want
to use a Petri net later

0:16:20.030,0:16:23.150
to model a
snack machine, for example.

0:16:23.150,0:16:26.270
That contains two kinds of snacks,
namely bars and chips, and of

0:16:26.270,0:16:32.300
course it can store a supply of
each of those two kinds to begin with.

0:16:32.900,0:16:35.330
In fact, in our
vending machine, it can

0:16:35.330,0:16:40.350
have a maximum of 30 pieces of
each of the two types in stock.

0:16:40.350,0:16:45.780
When you operate the vending machine,
you're dealing with a simple interface.

0:16:45.780,0:16:47.370
There is a yellow
and a red warning light.

0:16:47.370,0:16:53.850
One warning light indicates that there
is no change left in the machine.

0:16:53.850,0:16:58.800
And the other warning light means
that no more bills are accepted.

0:16:58.800,0:17:04.710
They can light up
independently of each other.

0:17:04.710,0:17:05.610
One could
also consider

0:17:05.610,0:17:14.910
that there could be a
logical connection between these two conditions.

0:17:14.910,0:17:18.090
But this should not be
assumed for the time being.

0:17:18.090,0:17:19.290
They can light up
independently of each other:

0:17:19.290,0:17:20.490
Neither of them
can light up, or

0:17:20.490,0:17:24.240
that the yellow one is on, or that the
red one is on, or that both are on.

0:17:25.770,0:17:28.830
What would be the set of
all possible states of this automaton?

0:17:28.830,0:17:30.750
What would you
have to remember in

0:17:30.750,0:17:34.230
each case, what could be all the
possible manifestations in which the automaton can be?

0:17:34.230,0:17:39.120
One can distinguish the states according to
which lamps are on or not on.

0:17:39.120,0:17:45.060
You can distinguish how many bars are
there and how many chips are there.

0:17:45.060,0:17:47.250
If one would enumerate
that, one could say:

0:17:47.250,0:17:49.110
One writes a
triple in each case.

0:17:49.110,0:17:52.530
In the first component, you
talk about which lights are on.

0:17:52.530,0:17:55.163
In the second, for example,
how many bars are present.

0:17:55.163,0:17:56.790
And in the third,
how many chips are present.

0:17:56.790,0:17:58.530
That would be
a triple cross product.

0:17:58.530,0:18:06.090
For these stock level indicators, you just
take a number between zero and 30.

0:18:06.090,0:18:11.310
Because those are the possible expressions, that you
have zero bars, two bars, up to 30 bars.

0:18:11.310,0:18:16.290
And what is the expression
for which lights are on?

0:18:16.290,0:18:17.190
That's
a subset.

0:18:18.030,0:18:21.780
It can be that no lights are on at all, the
yellow one is on, the red one is on, both are on.

0:18:21.780,0:18:23.730
That is, in the
first component of our state

0:18:23.730,0:18:28.860
triples we would want to store
a subset of the set \{yellow, red\}.

0:18:28.860,0:18:34.290
So our state space, the
set of all possible states of

0:18:34.290,0:18:40.110
this automaton, could be viewed as the
Cartesian product of the power set of the

0:18:40.110,0:18:42.720
set \{yellow, red\} (which is
a set of two colors

0:18:42.720,0:18:46.880
simple) and in each of the other
two components a number between zero and 30.

0:18:46.880,0:18:51.230
So about the
element (empty set, 20,

0:18:51.230,0:19:00.260
10), which is undoubtedly an element of
this power set, would be interpreted like this:

0:19:00.260,0:19:04.490
This is the state in
which both warning lights are off

0:19:04.490,0:19:11.180
(because this is where the empty quantity is), and
there are still 20 bars and 10 packages of chips.

0:19:11.180,0:19:23.960
If one had seen both lights switched
on at the same stock level, then

0:19:23.960,0:19:28.803
one would simply have the full quantity \{yellow, red\}
in the first component instead of the empty quantity, which

0:19:28.803,0:19:36.950
is also a subset of this quantity, and
thus is an element of this power set.

0:19:41.210,0:19:41.720
Now one
can also ask:

0:19:42.560,0:19:44.510
How many
states are there?

0:19:44.510,0:19:45.170
Here
are two.

0:19:45.170,0:19:46.490
How many
are there altogether?

0:19:46.490,0:19:50.090
And there already the
state explosion would strike.

0:19:50.090,0:19:54.260
If one calculates by means of the
rules, which were further in front on the

0:19:54.260,0:19:59.990
slides, how one calculates the number
of elements of such a constructed set.

0:19:59.990,0:20:05.390
Because of the cross product, you would
get the multiplication of the number of these

0:20:05.390,0:20:08.510
elements, the number of these elements,
and the number of these elements.

0:20:08.510,0:20:12.650
And by the power set here, we have 2 to
the power of the number of elements in the inner set.

0:20:12.650,0:20:16.460
And then you would get a total
of something in the neighborhood of 4000:

0:20:16.460,0:20:19.880
4 times "more than
30" times "more than 30".

0:20:19.880,0:20:22.250
That's getting
close to 4000.

0:20:22.250,0:20:26.660
You don't want to just write
them all down as a graph.

0:20:26.660,0:20:29.180
And there we might have
to look for other ways,

0:20:29.180,0:20:32.390
especially to deal with
such stocks or resources.

0:20:32.390,0:20:37.040
That's where the high number
of possible triples comes from.

0:20:40.250,0:20:45.680
We will deal with that
later, how to model such things.

0:20:45.680,0:20:48.230
This means not only to specify
the quantity, but also to express

0:20:48.230,0:20:52.130
state transitions in
a compact way.

0:20:56.060,0:20:59.750
What we still need is
the notion of function or mapping.

0:20:59.750,0:21:02.780
Functions are
known from school.

0:21:02.780,0:21:09.680
So typical representatives, which one
uses in the analysis for example.

0:21:09.680,0:21:11.540
In the discussion of curves
we do something with functions.

0:21:11.540,0:21:15.050
But there is also
the general notion of

0:21:15.050,0:21:17.450
function for arbitrary sets and
not necessarily sets of numbers.

0:21:17.450,0:21:23.150
So
notation here:

0:21:23.150,0:21:28.280
The function has a name and maps
from a definition set to a value set.

0:21:28.280,0:21:29.990
And these are
just arbitrary sets:

0:21:29.990,0:21:33.500
Sets of numbers perhaps,
but conceivably also other sets.

0:21:33.500,0:21:35.030
For example, sets
that have occurred here.

0:21:41.040,0:21:43.950
So a pair of
elements, which are related.

0:21:43.950,0:21:46.650
For one, a possible
notation would be to

0:21:46.650,0:21:50.186
say, if we apply f to a,
b comes out, so b is f(a).

0:21:50.186,0:21:55.170
You know this from school, y
is f(x) for respective corresponding elements

0:21:55.170,0:21:57.600
from definition
and value domains.

0:21:57.600,0:22:01.590
We will write it
down partly like this, that

0:22:01.590,0:22:08.460
is, as an explicit mapping: a
is mapped to (or mapped to) b.

0:22:08.460,0:22:11.010
Then, if the set
A is finite, one could

0:22:11.010,0:22:17.760
simply make this kind of
specification for all elements from A.

0:22:17.760,0:22:19.440
This would describe
the function completely.

0:22:19.440,0:22:26.250
Of course, that doesn't work for functions like
the sine function, where we have the set

0:22:26.250,0:22:28.980
of all real numbers
here, to write down finitely.

0:22:28.980,0:22:34.710
But for many cases, especially when A
is finite, we can also describe a

0:22:34.710,0:22:39.060
function by finitely
many such mappings.

0:22:39.060,0:22:42.870
We can also use
the same kind of

0:22:42.870,0:22:48.270
notation when we specify a general mapping
rule, i.e., how a maps to f(a).

0:22:48.900,0:22:55.530
For example, "a squared" could also be specified
this way instead of by this y=f(x) notation.

0:22:55.530,0:22:59.790

Example:

0:22:59.790,0:23:02.700
The square function on the
set of integers, we would say

0:23:02.700,0:23:05.940
that is a mapping from
the integers to the natural numbers.

0:23:05.940,0:23:09.210
When we square, negative
numbers can't come out.

0:23:09.210,0:23:12.420
So even though you
can put negative numbers in

0:23:12.420,0:23:17.040
here, because of the set Z of
integers, a natural number always comes out.

0:23:17.040,0:23:23.370
One way to write down
the assignment rule is this equation:

0:23:23.370,0:23:24.660
f(z) is
z squared.

0:23:24.660,0:23:30.870
Or just by this
written down with this mapping

0:23:33.090,0:23:34.590
symbol, this information
represented in this way.

0:23:34.590,0:23:41.530
A few concrete pairs here would be just such
mappings as -3 to 9, -2 to four, etc.

0:23:41.530,0:23:46.090
In the concrete case, of course,
this cannot be written down finitely by

0:23:46.090,0:23:51.700
enumeration, because there are still infinitely many
negative and infinitely many more positive numbers.

0:23:51.700,0:23:56.440
But if the range were finite,
one could give a section here

0:23:56.440,0:23:59.740
and take that as a whole
as a description of the function.

0:24:03.550,0:24:06.100
That was the
notion of function.

0:24:06.100,0:24:08.980
And finally, we're
going to use graphs.

0:24:08.980,0:24:12.250
Of course, intuitively, we've done
that up to this point.

0:24:12.250,0:24:15.040
We've already had
graphs written down.

0:24:15.040,0:24:20.620
Formally, a graph is
also simply a set-theoretic construct.

0:24:20.620,0:24:24.550
So you have a
set of labels or labels.

0:24:24.550,0:24:32.170
Then a directed and edge labeled graph (these
will be the graphs we will be primarily interested

0:24:32.170,0:24:38.530
in) is given by a
node set and an edge set.

0:24:39.130,0:24:41.470
The edge set is
a subset of the

0:24:41.470,0:24:45.340
cross product of the node set with
the label set and with the node set.

0:24:47.260,0:24:53.500
That is, the edges will be triples in which
the first component is a node, the second component is

0:24:53.500,0:24:58.060
an element of the label set,
and the third component is another node.

0:24:58.060,0:25:01.060
With the interpretation that
it's an edge labeled

0:25:01.060,0:25:04.240
with that label from
the node to the node.

0:25:04.240,0:25:07.990
So now here are the sets, but
in the triple, these are concrete representatives:

0:25:09.820,0:25:11.530
a node, a
label, a node.

0:25:12.700,0:25:15.490
These abbreviations V and
E come from "vertices"

0:25:15.490,0:25:18.220
and "edges", the English
terms for nodes and edges.

0:25:23.590,0:25:25.420
These sets are
likely to be infinite.

0:25:25.420,0:25:27.370
We will often
deal with finite graphs.

0:25:27.370,0:25:32.950
But from the point of view of set theory, the
vertex and edge sets in particular can also be infinite.

0:25:32.950,0:25:35.050
The label set is then
usually a finite set after all.

0:25:35.050,0:25:37.000
It can also
be very small.

0:25:37.000,0:25:40.120
We can also have a
label set with only one element.

0:25:40.120,0:25:42.430
Then there is no
real information in it.

0:25:42.430,0:25:46.000
Then one would have formally always
this one element from the label set.

0:25:46.000,0:25:49.210
This corresponds basically
to an unlabeled graph.

0:25:49.210,0:25:58.390
The being directed comes from the fact
that we have triples here and not sets.

0:25:58.390,0:26:00.580
So there's a first
component and a last component.

0:26:00.580,0:26:04.480
You can interpret that as
a directed connection from this

0:26:05.230,0:26:09.850
node standing in the first component to
the node standing in the last component.

0:26:09.850,0:26:14.350
What about
empty sets?

0:26:14.350,0:26:15.085
I had
already discussed infinity.

0:26:15.085,0:26:26.900
What you can have is that the node set
is not empty, but the edge set is empty.

0:26:26.900,0:26:31.430
That would be a trivial graph where there
are only nodes and no edges between them.

0:26:31.430,0:26:37.520
What cannot be is that the node set
is empty but the edge set is not.

0:26:37.520,0:26:48.560
If L is empty, there can be no
edges, because that set would necessarily be empty too.

0:26:48.560,0:26:51.350
We had the
observation that some

0:26:51.350,0:26:53.900
set cross product with the empty
set is always the empty set.

0:26:53.900,0:27:02.660
So the normal cases are already
that we are dealing with non-empty sets.

0:27:02.660,0:27:03.160
Another
example:

0:27:07.130,0:27:15.440
Let's just take as a set of nodes
the representatives for farmer, wolf, goat, cabbage head.

0:27:15.440,0:27:19.160
Following up on our example
very early in the lecture.

0:27:19.160,0:27:26.930
And as the set of labels, we use
the relationships that came up in the example.

0:27:26.930,0:27:32.420
We had modeled static briefly, and there
we had talked about possession and feeding relationships.

0:27:32.420,0:27:38.870
And for this node set, this label
set, that would be a conceivable edge set.

0:27:38.870,0:27:43.250
That's a set of triples, where in each case the
first component comes from V, the second component comes from

0:27:43.250,0:27:47.060
L, and the third component comes from V.
And then, of course, we can represent that.

0:27:47.060,0:27:53.210
And of course, we can
also represent this pictorially as this

0:27:53.210,0:27:56.990
graph, which we had already
seen earlier in the lecture.

0:27:56.990,0:28:01.850
There were not these
letters F, W, Z, K,

0:28:01.850,0:28:08.990
but here the respective pictures for
farmer, wolf, goat, cabbage head were inserted.

0:28:11.910,0:28:14.880
We would then
really have pictures,

0:28:14.880,0:28:22.170
be it with photos in there or these
nodes with the respective labels from the set V.

0:28:22.170,0:28:23.940
But
importantly:

0:28:23.940,0:28:26.520
This one up
here is a graph.

0:28:26.520,0:28:30.210
This one below is
represented as an image somehow.

0:28:30.210,0:28:33.450
But mathematically, what's up
here is already a graph.

0:28:33.450,0:28:38.250
We don't have to translate this into
a picture to accept it as a graph.

0:28:38.250,0:28:42.720
It says up front here, a
graph is just such a pair of

0:28:42.720,0:28:48.300
vertex and edge
sets with this context.

0:28:48.300,0:28:57.330
So strictly speaking, these three
sets together are stated the graph.

0:28:57.330,0:29:01.110
And this below is simply
an image of the graph.

0:29:01.110,0:29:06.510
That's going to be relevant because we're just
going to represent Petri nets as graphs as well.

0:29:06.510,0:29:12.570
And then mathematically, it's not necessary to
paint that as a picture as well.

0:29:12.570,0:29:18.180
Instead, this mathematical representation
alone is an exact representation.

0:29:18.180,0:29:23.840
More about this in the next week,
when we will talk about Petri nets.
